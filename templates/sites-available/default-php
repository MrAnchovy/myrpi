server {

	# The following line is not needed for listening on 80 as this is the default
	# listen 80;

	# If ipv6 is enabled you will want to enable this
	# listen [::]:80 default ipv6only=on;

	# Put your server name here!
	server_name localhost;

	# Log all access and errors by default
	log_not_found on;

	# This keeps logs, public_html and scripts together for easy backup etc.
	# and is particularly useful if you are running more than one vhost
	root       /var/hosts/default/public_html;
	access_log /var/hosts/default/log/www.access.log;
	error_log  /var/hosts/default/log/www.error.log;

	# This alternative follows the Filesystem Hierachy Standard
	# root       /var/www/default/public_html;
	# access_log /var/log/www/default/access.log;
	# error_log  /var/log/www/default/error.log;

	# avoid filling up the logs with favicon hits or misses
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}
 
	# log hits but not misses for robots.txt
	location = /robots.txt {
		allow all;
		log_not_found off;
	}
 
	# TODO check this does what it is intended to
	location ~ \..*/.*\.php$ {
		return 403;
	}

 
 	# enable one of the following to deny access to:
	# all 'dot' files (e.g. .git)
	location ~ /\. {

	# or just .htaccess etc. files
	# location ~ /\.ht

		deny all;
	}

	location ~ \.php$ {
		## next line important to prevent upload exploit e.g. www.mydomain.com/permitted_upload.jpg/anything.php
		try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		#NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_intercept_errors on;
		# fastcgi_pass 127.0.0.1:9000;
		fastcgi_pass unix:tmp/php.sock;
}

	# If we are not using rewrites we can do this
	try_files $uri index.html index.htm index.php =404;
	error_page 404 /404.html;

	# Otherwise we want the following
	# try_files $uri @rewrite;

	# Don't attempt to rewrite anything in /pub/
	location /pub/ {
		try_files $uri =404;
		# these are static files so tell browsers to cache for a while
		expires 24h;
	}

	# But rewrite everything else
	location @rewrite {
		rewrite ^/(.*)$ /index.php?q=$1;
	}
 
}

